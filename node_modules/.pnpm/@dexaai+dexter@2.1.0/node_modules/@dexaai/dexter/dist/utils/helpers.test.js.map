{"version":3,"file":"helpers.test.js","sourceRoot":"","sources":["../../src/utils/helpers.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAAE,MAAM,QAAQ,CAAC;AAC9C,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,MAAM,cAAc,CAAC;AAEtD,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;IAC7B,EAAE,CAAC,WAAW,EAAE,GAAG,EAAE;QACnB,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC7C,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC7C,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACpD,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;QAC5D,6CAA6C;QAC7C,MAAM,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC;YAChE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SACxB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,aAAa,EAAE,GAAG,EAAE;QACrB,MAAM,CAAC,WAAW,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC/C,MAAM,CAAC,WAAW,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC/C,MAAM,CAAC,WAAW,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACtD,MAAM,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;QAC9D,8EAA8E;QAC9E,MAAM,CACJ,WAAW,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAChE,CAAC,OAAO,CAAC;YACR,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SAC3B,CAAC,CAAC;QACH,MAAM,CACJ,WAAW,CACT,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,EAAE,EACrC,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,EAAE,CACpD,CACF,CAAC,OAAO,CAAC;YACR,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,IAAI,CAAC;SAChD,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { describe, expect, it } from 'vitest';\nimport { deepMerge, mergeEvents } from './helpers.js';\n\ndescribe('utils.helpers', () => {\n  it('deepMerge', () => {\n    expect(deepMerge(undefined, {})).toEqual({});\n    expect(deepMerge({}, undefined)).toEqual({});\n    expect(deepMerge(undefined, undefined)).toEqual({});\n    expect(deepMerge({}, { foo: true })).toEqual({ foo: true });\n    // Ensure arrays are merged in a stable order\n    expect(deepMerge({ foo: [1, 2, 3] }, { foo: [4, 5, 6] })).toEqual({\n      foo: [1, 2, 3, 4, 5, 6],\n    });\n  });\n\n  it('mergeEvents', () => {\n    expect(mergeEvents(undefined, {})).toEqual({});\n    expect(mergeEvents({}, undefined)).toEqual({});\n    expect(mergeEvents(undefined, undefined)).toEqual({});\n    expect(mergeEvents({}, { foo: true })).toEqual({ foo: true });\n    // Ensure duplicates are removed from event arrays and ordering remains stable\n    expect(\n      mergeEvents({ foo: [1, 2, 2, 3] }, { foo: [0, 4, 3, 5, 2, 6] })\n    ).toEqual({\n      foo: [1, 2, 3, 0, 4, 5, 6],\n    });\n    expect(\n      mergeEvents(\n        { foo: [console.debug, console.log] },\n        { foo: [console.warn, console.debug, console.log] }\n      )\n    ).toEqual({\n      foo: [console.debug, console.log, console.warn],\n    });\n  });\n});\n"]}